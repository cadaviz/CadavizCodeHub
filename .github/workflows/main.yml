name: Cadaviz Code Hub

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 🏗️ .NET SDK install
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Restore packages
        run: dotnet restore

      - name: 🔨 Build project
        run: dotnet build --configuration Release --no-restore

  tests-core:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 🧹 Clean .NET Environment
        uses: ./.github/actions/clear-environment

      - name: 🧪 Run tests
        run: dotnet test tests/CadavizCodeHub.Core.Tests --logger "trx;LogFileName=test-results-core.trx"

      - name: 📊 Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults_Core
          path: tests/CadavizCodeHub.Core.Tests/TestResults/*.trx
          # path: tests/**/TestResults/*.trx
          if-no-files-found: warn
  tests-orders:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 🧹 Clean .NET Environment
        uses: ./.github/actions/clear-environment

      - name: 🧪 Run tests
        run: |
         dotnet test tests/CadavizCodeHub.Orders.Application.Tests --logger "trx;LogFileName=test-results-orders-application.trx"
         dotnet test tests/CadavizCodeHub.Orders.Domain.Tests --logger "trx;LogFileName=test-results-orders-domain.trx"
         dotnet test tests/CadavizCodeHub.Orders.Persistence.Tests --logger "trx;LogFileName=test-results-orders-persistence.trx"
         dotnet test tests/CadavizCodeHub.Orders.WebApi.Tests --logger "trx;LogFileName=test-results-orders-webapi.trx"

      - name: 📊 Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults_Orders
          path: tests/CadavizCodeHub.Orders.*/TestResults/*.trx
          if-no-files-found: warn
  generate-test-reports:
    runs-on: ubuntu-latest
    needs: [tests-core, tests-orders]
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          pattern: TestResults_*
          merge-multiple: true
          run-id: ${{ github.event.workflow_run.id }}

      - name: 🔨 Generate report
        uses: dorny/test-reporter@v1
        with:
          name: test-reports
          path: "**/TestResults/*.trx" 
          reporter: dotnet-trx

  sonarqube-analysis:
    runs-on: ubuntu-latest 
    needs: [build, tests-core, tests-orders]
    steps:

      - name: 🏗️ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: 📦 Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: 📦 Install .NET Coverage
        run: dotnet tool install --global dotnet-coverage

      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 🧹 Clean .NET Environment
        uses: ./.github/actions/clear-environment

      - name: 🔨 Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"cadaviz_CadavizCodeHub" /o:"cadaviz" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=./test-coverage/coverage.xml
          dotnet-coverage collect --output-format xml --output ./test-coverage/coverage.xml -- 'dotnet test CadavizCodeHub.sln'
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"