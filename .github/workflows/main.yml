name: Cadaviz Code Hub

on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 🏗️ .NET SDK install
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  

      - name: 📦 Restore packages
        run: dotnet restore

      - name: 🔨 Build project
        run: dotnet build --configuration Release --no-restore

      - name: 📦 Save built artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/Release
            **/obj/Release

  sonarqube-analysis:
    runs-on: windows-latest
    needs: build
    steps:

      - name: 🏗️ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: 📥 Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: 🏗️ Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🏗️ Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: 🏗️ Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: 🔨 Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"cadaviz_CadavizCodeHub" /o:"cadaviz" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Get build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .
     
      - name: 🧪 Run tests
        run: dotnet vstest ./tests/CadavizCodeHub.Unit/bin/Release/net8.0/CadavizCodeHub.Unit.dll /logger:"trx;LogFileName=UnitTestResults.trx"
      
      - name: 📊 Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: UnitTestResults
          path: TestResults/*.trx

  generate-test-reports:
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: 📥 Checkout project
        uses: actions/checkout@v4

      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          pattern: UnitTestResults*
          merge-multiple: true
          run-id: ${{ github.event.workflow_run.id }}

      - name: 🔨 Generate report
        uses: dorny/test-reporter@v1
        with:
          name: test-reports
          path: "*.trx"
          reporter: dotnet-trx